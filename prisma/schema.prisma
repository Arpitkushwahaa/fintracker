generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String    @id @default(cuid())
  clerkId          String    @unique
  name             String?
  email            String    @unique
  password         String?
  emailVerified    DateTime?
  image            String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  defaultAccountId String?

  accounts         Account[]
  transactions     Transaction[]
  budgets          Budget[]
}

model Account {
  id          String   @id @default(cuid())
  userId      String
  name        String
  type        String
  balance     Float    @default(0)
  currency    String   @default("USD")
  color       String?
  icon        String?
  isDefault   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@index([userId])
}

model Transaction {
  id                String   @id @default(cuid())
  userId            String
  accountId         String
  amount            Float
  type              String
  category          String
  description       String?
  date              DateTime
  isRecurring       Boolean  @default(false)
  recurringType     String?
  recurringEndDate  DateTime?
  nextRecurringDate DateTime?
  receiptUrl        String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  account           Account  @relation(fields: [accountId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([accountId])
  @@index([date])
  @@index([category])
}

model Budget {
  id             String   @id @default(cuid())
  userId         String
  category       String
  amount         Float
  current        Float    @default(0)
  period         String
  startDate      DateTime
  endDate        DateTime
  alertThreshold Float    @default(0.8)
  alertSent      Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([category])
}
